package com.krishna.quiz.errorHandler;
import java.io.IOException;

import com.krishna.quiz.exception.ResourceNotFoundException;

import feign.Response;
import feign.Util;
import feign.codec.ErrorDecoder;

public class CustomErrorDecoder implements ErrorDecoder {

    private final ErrorDecoder defaultErrorDecoder = new Default();

    @Override
    public Exception decode(String methodKey, Response response) {
        if (response.status() == 404 || response.status() == 500) {
            String errorMessage = extractErrorMessage(response);
            return new ResourceNotFoundException(errorMessage);
        }

        // If it's not a 404 or 500 error, delegate to default Feign error decoder
        return defaultErrorDecoder.decode(methodKey, response);
    }

    private String extractErrorMessage(Response response) {
        try {
            if (response.body() != null) {
                // You might need to adapt this based on your response format (JSON, etc.)
                // Assuming the error message is present in the response body
                String responseBody = Util.toString(response.body().asReader());
                return responseBody;
            }
        } catch (IOException e) {
            // Handle the exception or log it
        }

        // If unable to extract error message from response, provide a default message
        return "Error occurred, but no specific message available.";
    }
}
