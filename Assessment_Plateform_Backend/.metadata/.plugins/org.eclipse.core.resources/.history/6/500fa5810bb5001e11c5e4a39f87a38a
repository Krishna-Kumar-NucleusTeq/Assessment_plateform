package com.krishna.auth.configuration;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Component;

import com.krishna.auth.dto.RegistrationDto;
import com.krishna.auth.entity.UserCrediential;
import com.krishna.auth.externalServices.UserService;
import com.krishna.auth.repository.UserCrediantialRepository;

@Component
public class CustomUserDetailsService implements UserDetailsService {

//    @Autowired
//    private UserService userService;
	
	@Autowired
	private UserCrediantialRepository repository;
    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
    	
    	
    	System.out.println("invoke the get user by loaduserby userName.");
        //RegistrationDto credential = userService.getUserByEmail(username);
    	UserCrediential credential = repository.findByEmailId(username);
        
        if(credential == null) {
        	 throw new UsernameNotFoundException("user not found with name :" + username);
        }
//        System.out.println("Uesr Email id is :"+credential.getEmail());
        
//        CustomUserDetails customUserDetails= new CustomUserDetails(credential);
//        CustomUserDetails customUserDetails= new CustomUserDetails(credential);
        
//        return credential.map(CustomUserDetails::new).orElseThrow(() -> new UsernameNotFoundException("user not found with name :" + username));
//        return customUserDetails;
        return null;
    }
}